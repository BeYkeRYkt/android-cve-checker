import os
import sys


"""
CVE Wrapper class.
An instance is supposed to represent a CVE with a name and a list of git
patchfiles for every Linux kernel version.

Args:
    name:           The name of the CVE, e.g. "CVE-2016-5863"
    patchfile_path: The path to the directory containing the CVE git patches
                    for all kernel versions.
"""


class CveWrapper(object):
    # name of the CVE
    name = ""
    # local git patchfiles for affected kernel versions
    # NOTE: each value entry shall be a list of patchfiles
    patchfiles = {}

    def __init__(self, name, patchfile_path = None):

        self.name = name
        if patchfile_path:
            self.patchfiles = self.find_patchfiles(patchfile_path)
        else:
            self.patchfiles = dict()

    def __lt__(self, other):
        return (self.name.lower() < other.name.lower())

    """
    Grabs all patchfiles according to self.name.

    Args:
        path: The path containing the patchfiles.

    Returns:
        Initializes self.patchfiles with a dict of sorted patchfiles.
    """

    def find_patchfiles(self, path):

        patch_suffix = ".patch"
        patchfiles = {}

        # "path" will contain several subdirs like "3.10", "3.18" etc.
        for k_version in os.listdir(path):

            patches = []
            for patchfile in os.listdir(os.path.join(path, k_version)):
                if (patchfile.startswith(self.name) and
                        patchfile.endswith(patch_suffix)):
                    patches.append(os.path.join(os.path.abspath(path),
                                                k_version, patchfile))

                patches.sort()
                patchfiles[k_version] = patches

        return patchfiles

"""
Class testing.
"""


def main():

    # check for required args
    if len(sys.argv) < 3:
        print("[E] Invalid number of args (required: 2, found: "
              + str(len(sys.argv)-1) + ")!")
        print("usage: cve.py <name> <path_to_patchfiles>")
        sys.exit(2)

    # CVE name
    cve_name = sys.argv[1]

    # directory containing the CVE patches
    input_dir = sys.argv[2]

    test_cve = cve(cve_name, input_dir)

    print(test_cve.name)
    print(test_cve.patchfiles)


if __name__ == "__main__":
    main()
