import os
import shutil
import sys

from stat import *


"""
Check if a node exists and is a regular file.

Args:
    path: The absolute path to the file.

Returns:
    True  - file exists
    False - otherwise
"""


def file_exists(path):

    try:
        mode = os.stat(path).st_mode
        if not S_ISREG(mode):
            return False
    except OSError as e:
        return False

    return True


"""
Check if a node exists and is a directory.

Args:
    path: The absolute path to the file.

Returns:
    True  - file exists
    False - otherwise
"""


def dir_exists(path):

    try:
        mode = os.stat(path).st_mode
        if not S_ISDIR(mode):
            return False
    except OSError as e:
        return False

    return True


"""
Check if a node is accessible.

Args:
    path: The absolute path to the file.
    mode: The access mode to check for.

Returns:
    True  - node is accessible
    False - otherwise
"""


def is_accessible(path, mode):

    path_ = path
    if not file_exists(path) and not dir_exists(path):
        if not "w" in mode and not "a" in mode:
            print("[ERROR] File does not exist and shall not be created: "
                  + path + ", mode: " + mode)
            return False
        else:
            # we can create the file if needed
            path_ = os.path.dirname(os.path.abspath(path))

    mode_ = 0
    if "f" in mode:
        mode_ |= os.F_OK
    if "r" in mode:
        mode_ |= os.R_OK
    if "w" in mode or "+" in mode:
        mode_ |= os.W_OK
    if "x" in mode:
        mode_ |= os.X_OK

    if not mode_:
        print("[ERROR] Invalid access mode: " + mode)
        return False

    return os.access(path_, mode_)


"""
Check if a directory exists and create it if not.

Args:
    path: The absolute path to the directory.

Returns:
    Nothing
"""


def check_create(path):

    if not os.path.exists(path):
        os.makedirs(os.path.abspath(path))


"""
Remove a directory and recreate it.

Args:
    path: The absolute path to the directory.

Returns:
    Nothing
"""


def recreate(path):

    shutil.rmtree(path, ignore_errors=True)
    os.makedirs(os.path.abspath(path))


"""
Check if a directory exists, ask the user if it shall be removed and
recreated.

Args:
    path: The absolute path to the directory.

Returns:
    Nothing
"""


def check_recreate(path):

    check_create(path)

    if os.listdir(path):
        print("[WARNING] path: " + path + " already exists and is not empty.")
        stdin = input("Do you want to remove it? (Y/n) ")
        if stdin is "Y":
            recreate(path)
